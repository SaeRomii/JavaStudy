/*=====================================
  ■■■ 정렬(Sort) 알고리즘 ■■■
  - 선택 정렬(Selection Sort)
=====================================*/

/*
○ 정렬
   : 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
   : 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
     → 보기 좋게... 검색하기 위함

※ 정렬은 리소스 소모가 심하다.

○ 정렬의 종류
   : 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬, ...
*/

// 실행 예)
// Source Data : 52 42 12 62 60
// Sorted Data : 12 42 52 60 62
// 계속하려면 아무 키나...

public class Test102
{
	public static void main(String[] args)
	{
		int[] a= {52, 42, 12, 62, 60};
		/*
		52, 42, 12, 62, 60			→ 0번째 1번째 비교
		======비교
		42, 52, 12, 62, 60			→ 0번째 2번재 비교
		==      ==비교
		12, 52, 42, 62, 60			→ 0번째 3번째 비교
		==          ==
		12, 52, 42, 62, 60          → 0번째 4번째 비교
		==				==

		-------------------------------------------------- 1회전	선택 정렬은 1회전 후 맨 왼쪽 최소값이 픽스됨

		12, 52, 42, 62, 60			→ 1번째 2번째 비교
		    ==  ==
		12, 42, 52, 62, 60			→ 1번째 3번째 비교
		    ==      ==
		12, 42, 52, 62, 60			→ 1번째 4번째 비교
		    ==		    ==

		-------------------------------------------------- 2회전

		12, 42, 52, 62, 60			→ 2번째 3번째 비교
		        ==  ==
		12, 42, 52, 62, 60			→ 2번째 4번째 비교
				==      ==

		-------------------------------------------------- 3회전

		12, 42, 52, 62, 60			→ 3번째 4번째 비교
					==  ==
		12, 42, 52, 60, 62

		-------------------------------------------------- 4회전

		회전 하나씩 끝날때마다 회전수 하나씩 줄어듬

		*/
		 
		/* 내가 풀었던 방식
		//코드화
		int data;

		System.out.print("Source Data : ");


		//a를 어디에 담아서 나오게 한다음에 비교해야할 것 같은데 어케담ㅇ

		for (int n=0; n<a.length; n++)
		{
			System.out.printf("%3d", a[n]);
		}
		System.out.println();
		

		for (int i=0; i<a.length; i++)						// 기준데이터 0 1 2 3 4
		{
			for (int j=i+1; j<a.length; j++)				// 비교데이터 1 2 3 4
			{
				if (a[i]>a[j])
				{
					data=a[i];
					a[i]=a[j];
					a[j]=data;
				}
			}
		}
		System.out.print("Sorted Data : ");

		for (int n=0; n<a.length; n++)
		{
			System.out.printf("%3d", a[n]);
		}
		System.out.println();
		*/

		int i, j;

		System.out.print("Source Data : ");

		/*
		for (i=0; i<a.length; i++)
		{
			System.out.print(a[i] + " ");
		}
		System.out.println();
		*/

		// 향상된 for문 → forEach 구문
		for (int n : a)			// 괄호안에 작성할때 오른쪽부분부터 쓰고 왼쪽 쓰는거임 a배열 타입을 오른쪽에 넣고 왼쪽은 오른쪽에 넣은 배열 
								// 매개변수 넣고 변수는 마음대로 작성할 수 있게
		{
			System.out.print(n + " ");		// 이에서 변수 마음대로 작성하고 그 변수 여기서 설정할 수 있게~!! 
		}
		System.out.println();
		//--==>> Source Data : 52 42 12 62 60

		// Selection Sort 구현(선택정렬)
		for (i=0; i<a.length-1; i++)		// 기준데이터는 끝까지 안가니까 -1해줌 여기서 i는 0 1 2 3 4이지만 -1해서 0 1 2 3으로 비교 기준데이터
		{
			//System.out.println("웅"); → for문 도는거 확인
			for (j=i+1; j<a.length; j++)	// j → i가 0일때 1 2 3 4 , i가 1일때 2 3 4, i가 2일때 3 4, i가 3일때 4
			{
				//System.out.println("숑"); → for문 도는거 확인

				if (a[i]>a[j])		//i가 더 클때 자리 바꾸게하기~! (오름차순 조건 구성)
				{
					// 자리 바꾸기
					a[i] = a[i]^a[j];
					a[j] = a[j]^a[i];
					a[i] = a[i]^a[j];
				}
			}
		}


		// 결과물 출력
		System.out.print("Sorted Data : ");
		for (int n : a)
		{
			System.out.print(n + " ");
		}
		System.out.println();
	}
}

/* 실행 결과
Source Data : 52 42 12 62 60
Sorted Data : 12 42 52 60 62
계속하려면 아무 키나 누르십시오 . . .
*/